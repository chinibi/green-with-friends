!function(){"use strict";angular.module("app",["ui.router","ngResource"])}(),function(){"use strict";function e(e,t){t.state("welcome",{url:"/",templateUrl:"/js/templates/welcome.html"}).state("signin",{url:"/signin",templateUrl:"/js/templates/signin.html",controller:"SignInController",controllerAs:"vm"}).state("profile",{url:"/profile",templateUrl:"/js/templates/profile.html",controller:"ProfileController",controllerAs:"pc"}).state("friends",{url:"/friends",templateUrl:"/js/templates/friends.html",controller:"FriendsController",controllerAs:"fc"}).state("weekly",{url:"/weekly",templateUrl:"/js/templates/weekly.html",controller:"WeeklyController",controllerAs:"wc"}).state("weekly-new",{url:"/new-weekly",templateUrl:"/js/templates/weekly-create.html",controller:"WeeklyCreateController",controllerAs:"wcc"}),e.otherwise("/")}angular.module("app").config(e),e.$inject=["$urlRouterProvider","$stateProvider"]}(),function(){"use strict";function e(e,t,n,r){function o(){n({method:"GET",url:"/api/users/me"}).then(function(e){u.username=e.data.data.username})}function i(){return null!==t.retrieve()}function l(e){var r=n({method:"POST",url:"/api/token",data:e,headers:{"Content-Type":"application/json"}}).then(function(e){return t.store(e.data),o(),t.decode()});return r}function a(){t.destroy(),r.go("welcome")}e.info("auth service loaded!");var u={logIn:l,isLoggedIn:i,logOut:a,username:""};return o(),u}angular.module("app").factory("authService",e),e.$inject=["$log","tokenService","$http","$state"]}(),function(){"use strict";function e(e,t){function n(n){t.localStorage.setItem(l,n),e.info("token stored, local storage: ",t.localStorage)}function r(){return t.localStorage.getItem(l)}function o(){return t.jwt_decode(r())}function i(){t.localStorage.removeItem(l)}e.info("token service loaded!");var l="shmee-banana",a={store:n,retrieve:r,decode:o,destroy:i};return a}angular.module("app").factory("tokenService",e),e.$inject=["$log","$window"]}(),function(){"use strict";function e(e,t,n){function r(e){var n=t({method:"POST",url:"/api/users",data:e});return n}function o(){var e=n.localStorage.getItem("shmee-banana"),r=t.get("/api/users/me",{headers:{"Content-Type":"application/json",Authorization:"Bearer "+e}});return r}e.info("user service loaded!");var i={create:r,me:o};return i}angular.module("app").factory("userService",e),e.$inject=["$log","$http","$window"]}(),function(){"use strict";function e(e){e.debugEnabled(!1)}angular.module("app").config(e),e.$inject=["$logProvider"]}(),function(){"use strict";function e(e){e.interceptors.push("jsonHeadersService"),e.interceptors.push("tokenSigningService"),e.interceptors.push("authErrorRedirect")}angular.module("app").config(e),e.$inject=["$httpProvider"]}(),function(){"use strict";function e(e,t){function n(n){var r=n.status;return 401!==n.status&&403!==n.status||e.debug(r+" response received! Redirecting user to signin."),t.reject(n)}return{responseError:n}}angular.module("app").factory("authErrorRedirect",e),e.$inject=["$log","$q"]}(),function(){"use strict";function e(e){function t(t){return e.debug("Setting JSON headers."),t.headers["Content-Type"]="application/json",t}return{request:t}}angular.module("app").factory("jsonHeadersService",e),e.$inject=["$log"]}(),function(){"use strict";function e(e,t){function n(n){return t.retrieve()&&(e.debug("Token exists; signing request."),n.headers.Authorization="Bearer "+t.retrieve()),n}return{request:n}}angular.module("app").factory("tokenSigningService",e),e.$inject=["$log","tokenService"]}(),function(){"use strict";function e(e,t,n){function r(){n.me().then(function(e){l.friendRequests=e.data.data.friendRequests,l.friendList=e.data.data.friends})}function o(){l.friendRequestBody.username=l.friendRequestUsername,t({method:"POST",url:"/api/users/friends/new",data:l.friendRequestBody}).then(function(){l.friendRequestUsername=""})}function i(e){t({method:"POST",url:"/api/users/friends/accept",data:e}).then(function(t){l.friendRequests.splice(l.friendRequests.indexOf(e),1),l.friendList.unshift(t.data)})}var l=this;l.friendRequests=[],l.friendList=[],l.friendRequestUsername="",l.friendRequestBody={},l.newRequest=o,l.acceptRequest=i,r()}angular.module("app").controller("FriendsController",e),e.$inject=["$state","$http","userService"]}(),function(){"use strict";function e(e,t,n,r,o){function i(){n.go("profile")}var l=this;l.authService=r,l.goToProfile=i,t.info("NavbarController loaded!")}angular.module("app").controller("NavbarController",e),e.$inject=["$http","$log","$state","authService","userService"]}(),function(){function e(e,t,n){function r(){e({method:"GET",url:"/api/users/me"}).then(function(e){o.badges=e.data.data.badges})}var o=this;o.badges=[],r()}angular.module("app").controller("ProfileController",e),e.$inject=["$http"]}(),function(){"use strict";function e(e,t,n,r){function o(){n.create(l.signUp).then(function(e){return t.logIn(l.signUp)}).then(function(t){e.info("Logged in!",t),r.go("weekly")},function(t){l.error=t.data,409===t.status&&(l.conflict=!0),e.info("Error Claire-r:",t)})}function i(){t.logIn(l.logIn).then(function(t){e.info("Logged in!",t),r.go("weekly")},function(t){l.error=t.data,e.info("Error:",t)})}var l=this;l.signUp={},l.submitSignUp=o,l.logIn={},l.submitLogIn=i,l.conflict=!1,e.info("SignInController loaded!")}angular.module("app").controller("SignInController",e),e.$inject=["$log","authService","userService","$state"]}(),function(){"use strict";function e(e,t,n){function r(){u.challenges.push({description:""})}function o(e){u.challenges=u.challenges.filter(function(t){return t!=e})}function i(){u.newWeekly={badge:u.badge,description:u.description,imgURL:u.imgURL,challenges:u.challenges},n({method:"POST",url:"/api/weekly",data:u.newWeekly}).then(function(){u.newWeekly={},l(),e(a,500),e(function(){t.go("welcome")},2e3)})}function l(){u.startFade=!0,e(function(){u.hidden=!0},500)}function a(){u.startEmerge=!0,e(function(){u.emerge=!0},500)}var u=this;u.newWeekly={},u.badge="",u.description="",u.imgURL="",u.challenges=[],u.addChallengeField=r,u.removeChallengeField=o,u.createWeekly=i,u.hideThis=l,u.showThis=a;for(var c=1;c<=4;c++)u.challenges.push({description:""})}angular.module("app").controller("WeeklyCreateController",e),e.$inject=["$timeout","$state","$http"]}(),function(){"use strict";function e(e,t){function n(){t({method:"GET",url:"/api/weekly"}).then(function(e){u.weekly=e.data})}function r(n){var r=u.weekly.challenges[u.weekly.challenges.indexOf(n)].completed;r=!r,t({method:"PUT",url:"/api/weekly",data:u.weekly}).then(function(t){u.weekly=t.data.weekly[0],e.go("weekly")})}function o(){u.allDone=u.weekly.challenges.every(function(e){return e.completed})}function i(e){r(e),o()}function l(){t({method:"POST",url:"/api/users/me",data:u.weekly})}function a(){e.go("profile")}var u=this;u.weekly=[],u.challenge={},u.getWeekly=n,u.checkbox=i,u.allDone=!1,u.checkAllDone=o,u.awardBadge=l,u.goToProfile=a,n()}angular.module("app").controller("WeeklyController",e),e.$inject=["$state","$http"]}(),function(){function e(e){return e("/api/weekly",{},{update:{method:"PUT"}})}angular.module("app").factory("WeeklyResource",e),e.$inject=["$resource"]}();